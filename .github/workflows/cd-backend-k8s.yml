name: Backend CD using k8s

on:
  # push:
    # branches: ["main"]
  workflow_dispatch:
    
# defaults:
#   run:
#     working-directory: backend/grabtable

env:
  dockerimage_tag: ${{ github.sha }}
  dockerimage_name: ${{ secrets.HARBOR_REGISTRY }}/library/grabtable-be

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Code Repo 불러오기
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACTION_TOKEN }}
          submodule: true

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: Gradle 권한 부여
        working-directory: backend/grabtable
        run: chmod +x gradlew

      - name: Gradle build
        working-directory: backend/grabtable
        run: ./gradlew build --exclude-task test --exclude-task asciidoctor
        
      # - name: Docker 준비(1/4) - 메타데이터 생성
      #   id: meta
      #   uses: docker/metadata-action@v5.5.1
      #   with:
      #     images: |
      #       ${{ env.dockerimage_name }}
      #     tags: |
      #       ${{ env.dockerimage_tag }}
      #       latest
      #     flavor: |
      #       latest=true
      # - name: Docker 준비(2/4) - QEMU 설정
      #   uses: docker/setup-qemu-action@v3
      # - name: Docker 준비(3/4) - buildx 설정
      #   uses: docker/setup-buildx-action@v3
      # - name: Docker 준비(4/4) - 레지스트리 로그인
      #   uses: docker/login-action@v3.0.0
      #   with:
      #     registry: ${{ secrets.HARBOR_REGISTRY }}
      #     username: ${{ secrets.HARBOR_USERNAME }}
      #     password: ${{ secrets.HARBOR_PASSWORD }}
      # - name: Docker 이미지 빌드+푸시
      #   id: build-and-push
      #   uses: docker/build-push-action@v5.1.0
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     platforms: linux/amd64
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      #     provenance: false
      - name: Docker build & push
        working-directory: backend/grabtable
        run: |
            docker login ${{ secrets.HARBOR_REGISTRY }} -u ${{ secrets.HARBOR_USERNAME }} -p ${{ secrets.HARBOR_PASSWORD }}
            docker build -f Dockerfile -t ${{ env.dockerimage_name }}:${{ env.dockerimage_tag }} .
            docker push ${{ env.dockerimage_name }}:${{ env.dockerimage_tag }}


      - name: --------------- Config Repo ---------------
        run: echo "[Config Repo]"
      - name: Config Repo 불러오기
        uses: actions/checkout@v4
        with:
          repository: GrabTable/grabtable-config
          ref: main
          token: ${{ secrets.ACTION_TOKEN }}
          path: grabtable-config
      - name: Kustomize 준비
        uses: imranismail/setup-kustomize@v2.0.0
      - name: Config Repo 이미지 값 업데이트 (Kustomize)
        run: |
          cd grabtable-config/overlays/dev/be/
          kustomize edit set image ${{ env.dockerimage_name }}:${{ env.dockerimage_tag }}
          cat kustomization.yaml
      - name: Config Repo 변경사항 푸시
        run: |
          cd grabtable-config
          git config --global user.email "jcy030896@naver.com"
          git config --global user.name "chanyeong"
          git commit -am "Update image tag"
          git push -u origin main
      - name: --------------- Clean Up ---------------
        run: echo "Clean Up"
