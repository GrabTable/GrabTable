name: Frontend CD using k8s

on:
  # push:
    # branches: ["main"]
  workflow_dispatch:
    
env:
  dockerimage_tag: ${{ github.sha }}
  dockerimage_name: ${{ secrets.HARBOR_REGISTRY }}/library/grabtable-fe

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Code Repo 불러오기
        uses: actions/checkout@v4

      - name: Docker 준비(1/4) - 메타데이터 생성
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            ${{ env.dockerimage_name }}
          tags: |
            ${{ env.dockerimage_tag }}
            latest
          flavor: |
            latest=true
      - name: Docker 준비(2/4) - QEMU 설정
        uses: docker/setup-qemu-action@v3
      - name: Docker 준비(3/4) - buildx 설정
        uses: docker/setup-buildx-action@v3
      - name: Docker 준비(4/4) - 레지스트리 로그인
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ secrets.HARBOR_REGISTRY }}
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: env 파일 생성
        working-directory: frontend/grabtable
        run: |
          echo NEXT_PUBLIC_BASE_API_URL=${{secrets.API_BASE_URL}} >> .env.local
          echo NEXT_PUBLIC_BASE_URL=${{secrets.BASE_URL}} >> .env.local
          echo NEXT_PUBLIC_KAKAO_MAP_KEY=${{secrets.KAKAO_MAP}} >> .env.local
          echo NEXT_PUBLIC_KAKAO_REDIRECT_URI=${{secrets.KAKAO_REDIRECT}} >> .env.local
          echo NEXT_PUBLIC_KAKAO_CLIENT_ID=${{secrets.KAKAO_CLIENT}} >> .env.local
          echo SESSION_SECRET=${{secrets.SESSION_SECRET}} >> .env.local

      - name: Docker 이미지 빌드+푸시
        id: build-and-push
        uses: docker/build-push-action@v5.1.0
        with:
          context: frontend/grabtable
          file: frontend/grabtable/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: --------------- Config Repo ---------------
        run: echo "[Config Repo]"
      - name: Config Repo 불러오기
        uses: actions/checkout@v4
        with:
          repository: GrabTable/grabtable-config
          ref: main
          token: ${{ secrets.ACTION_TOKEN }}
          path: grabtable-config
      - name: Kustomize 준비
        uses: imranismail/setup-kustomize@v2.0.0
      - name: Config Repo 이미지 값 업데이트 (Kustomize)
        run: |
          cd grabtable-config/overlays/dev/fe/
          kustomize edit set image ${{ env.dockerimage_name }}:${{ env.dockerimage_tag }}
          cat kustomization.yaml
      - name: Config Repo 변경사항 푸시
        run: |
          cd grabtable-config
          git config --global user.email "jcy030896@naver.com"
          git config --global user.name "chanyeong"
          git commit -am "Update image tag"
          git push -u origin main
      - name: --------------- Clean Up ---------------
        run: echo "Clean Up"
